{"version":3,"sources":["../src/call.js"],"names":["wrapFunction","func","type","name","toString","version","args","arguments","call","wrap","obj","reduce","result","key"],"mappings":";;;;;;;;;;AAEA;;;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,CAASC,IAAT,EAAyB;AAC1C,WAAO,YAAW;AAChB,eAAO;AACHC,kBAAM,MADH;AAEHC,kBAAMF,KAAKE,IAAL,IAAaF,KAAKG,QAAL,EAFhB;AAGHC,qBAAS,kBAAIJ,IAAJ,CAHN;AAIHK,kBAAMC,SAJH;AAKHN;AALG,SAAP;AAOD,KARD;AASH,CAVD;;AAYA,IAAMO,OAAO,SAAPA,IAAO,CAACP,IAAD;AAAA,WAAoBD,aAAaC,IAAb,CAApB;AAAA,CAAb;AACAO,KAAKC,IAAL,GAAY,UAACC,GAAD;AAAA,WACV,oBAAYA,GAAZ,EAAiBC,MAAjB,CAAwB,UAACC,MAAD,EAASC,GAAT,EAAiB;AACrC,YAAI,OAAOH,IAAIG,GAAJ,CAAP,KAAoB,UAAxB,EAAoC;AAChCD,mBAAOC,GAAP,IAAcb,aAAaU,IAAIG,GAAJ,CAAb,CAAd;AACH,SAFD,MAGK;AACDD,mBAAOC,GAAP,IAAcH,IAAIG,GAAJ,CAAd;AACH;AACD,eAAOD,MAAP;AACL,KARC,EAQC,EARD,CADU;AAAA,CAAZ;;kBAWeJ,I","file":"call.js","sourcesContent":["//@flow\nimport type {FlowCall} from './types';\nimport md5 from 'md5';\n\nconst wrapFunction = function(func: Function) {\n    return function() {\n      return {\n          type: \"call\",\n          name: func.name || func.toString(),\n          version: md5(func),\n          args: arguments,\n          func\n        }\n    };\n}\n\nconst call = (func: Function) => wrapFunction(func);\ncall.wrap = (obj: *) =>\n  Object.keys(obj).reduce((result, key) => {\n      if (typeof obj[key] === \"function\") {\n          result[key] = wrapFunction(obj[key]);\n      }\n      else {\n          result[key] = obj[key];\n      }\n      return result;\n}, {});\n\nexport default call;\n"]}