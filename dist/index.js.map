{"version":3,"sources":["../src/index.js"],"names":["executeFlow","_send","item","send","call","require","default","flow","save","complete","observer","_guardFlow","dependencies","forEach","_isFunction","k","e","error","stopped","generator","execution","i","nextValue","cachedSteps","steps","result","next","done","value","_guardNextValue","func","apply","args","_isPromise","throw","type","saveMethod","then","completeMethod","catch","dispose","obj","Error","name","constructor"],"mappings":"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","file":"index.js","sourcesContent":["//@flow\nimport type {Flow, Observer, SaveFlow, CompleteFlow} from './types';\n\n//usage of static 'send' method for better client api'\nlet _send = (item: mixed) => {};\nexport const send = (item: mixed) => _send(item);\n\nexport const call = require('./call').default;\n\nexport function executeFlow(flow: Flow, save?: SaveFlow, complete?: CompleteFlow) {\n    return function(observer: Observer) {\n        try {\n            flow = _guardFlow(flow);\n            Object.keys(flow.dependencies).forEach(k => {\n                if (_isFunction(flow.dependencies[k])) {\n                    flow.dependencies[k] = call(flow.dependencies[k])\n                }\n            });\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n\n        let stopped = false;\n        let generator = flow.execution(flow.dependencies);\n        let i = 0;\n        let nextValue;\n        (async function() {\n            while (true) {\n                let cachedSteps = flow.steps[i];\n                if (cachedSteps) {\n                    _send = () => {};\n                    nextValue = cachedSteps.result;\n                    let {done, value} = generator.next(nextValue);\n                    if (done) return;\n                    i++;\n                    continue;\n                }\n\n                _send = observer.next;\n                let {done, value} = generator.next(nextValue);\n                if (done) return;\n                value = _guardNextValue(value);\n                try {\n                    nextValue = value.func ? value.func.apply(null, value.args) : null;\n                    if (_isPromise(nextValue)) {\n                        nextValue = await nextValue;\n                        _send = observer.next;\n                    }\n                }\n                catch (e) {\n                    generator.throw(e);\n                }\n\n                flow.steps[i] = {type: value.type, result: nextValue};\n\n                if (save) {\n                    const saveMethod = save(flow);\n                    if (_isPromise(saveMethod)) {\n                        await saveMethod;\n                    }\n                    if (stopped) return;\n                }\n                i++;\n            }\n        })()\n        .then(async () => {\n            if (complete) {\n                const completeMethod = complete(flow);\n                if (_isPromise(completeMethod)) {\n                    await completeMethod;\n                }\n            }\n            observer.complete()\n        })\n        .catch(error => observer.error(error));\n\n        return {\n            ...flow,\n            dispose: () => {stopped = true;}\n        }\n    }\n}\n\nfunction _isPromise(obj) {\n    return obj && obj.then;\n}\n\nfunction _guardFlow(flow) {\n    if (!flow)\n        throw new Error(\"flow cannot be null\");\n\n    if (!flow.name)\n        throw new Error(\"flow must have a name\");\n\n    if (!flow.execution)\n        throw new Error(\"flow generator cannot be null\");\n\n    if (!flow.steps)\n        flow.steps = [];\n\n    if (!flow.dependencies)\n        flow.dependencies = {};\n\n\n    return flow;\n}\n\nfunction _guardNextValue(value) {\n    if (!value)\n        throw new Error(\"generator yielded null value. Notice to yieled values must function wrap with 'call' method.\");\n\n    if (value.type != \"call\")\n        throw new Error(\"generator yield value type different than 'call'. type was: \" + value.type + \". Did you wrap your function with 'call' method?\");\n\n    return value;\n}\n\nconst _isFunction = function(obj) {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n};\n"]}