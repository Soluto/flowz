{"version":3,"sources":["../src/index.js"],"names":["executeFlow","_send","item","send","call","require","default","flow","save","observer","_guardFlow","dependencies","forEach","_isFunction","k","e","error","next","stopped","generator","execution","i","nextValue","done","value","_guardNextValue","cachedMethod","cachedFlowCalls","result","func","apply","args","_isPromise","throw","type","saveMethod","then","complete","catch","dispose","obj","Error","name","constructor"],"mappings":"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","file":"index.js","sourcesContent":["//@flow\nimport type {Flow, Observer, SaveFlow} from './types';\n\n//usage of static 'send' method for better client api'\nlet _send = (item: mixed) => {};\nexport const send = (item: mixed) => _send(item);\n\nexport const call = require('./call').default;\n\nexport function executeFlow(flow: Flow, save: SaveFlow = (flow) => {}) {\n    return function(observer: Observer) {\n        try {\n            flow = _guardFlow(flow);\n            Object.keys(flow.dependencies).forEach(k => {\n                if (_isFunction(flow.dependencies[k])) {\n                    flow.dependencies[k] = call(flow.dependencies[k])\n                }\n            });\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n\n        _send = observer.next;\n        let stopped = false;\n        let generator = flow.execution(flow.dependencies);\n        let i = 0;\n        let nextValue;\n        (async function() {\n            while (true) {\n                let {done, value} = generator.next(nextValue);\n                if (done) return;\n                value = _guardNextValue(value);\n\n\n                let cachedMethod = flow.cachedFlowCalls[i];\n                if (cachedMethod) {\n                    nextValue = cachedMethod.result;\n                }\n                else {\n                    try {\n                        nextValue = value.func.apply(null, value.args);\n                        if (_isPromise(nextValue)) {\n                            nextValue = await nextValue;\n                            _send = observer.next;\n                        }\n                    }\n                    catch (e) {\n                        generator.throw(e);\n                    }\n\n                    flow.cachedFlowCalls[i] = {type: value.type, result: nextValue};\n\n                    const saveMethod = save(flow);\n                    if (_isPromise(saveMethod)) {\n                        await saveMethod;\n                    }\n\n                    if (stopped) return;\n                }\n                i++;\n            }\n        })()\n        .then(() => observer.complete())\n        .catch(error => observer.error(error));\n\n        return {\n            ...flow,\n            dispose: () => {stopped = true;}\n        }\n    }\n}\n\nfunction _isPromise(obj) {\n    return obj && obj.then;\n}\n\nfunction _guardFlow(flow) {\n    if (!flow)\n        throw new Error(\"flow cannot be null\");\n\n    if (!flow.name)\n        throw new Error(\"flow must have a name\");\n\n    if (!flow.execution)\n        throw new Error(\"flow generator cannot be null\");\n\n    if (!flow.cachedFlowCalls)\n        flow.cachedFlowCalls = [];\n\n    if (!flow.dependencies)\n        flow.dependencies = {};\n\n\n    return flow;\n}\n\nfunction _guardNextValue(value) {\n    if (!value)\n        throw new Error(\"generator yielded null value. Notice to yieled values must function wrap with 'call' method.\");\n\n    if (value.type != \"call\")\n        throw new Error(\"generator yield value type different than 'call'. type was: \" + value.type + \". Did you wrap your function with 'call' method?\");\n\n    return value;\n}\n\nconst _isFunction = function(obj) {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n};\n"]}